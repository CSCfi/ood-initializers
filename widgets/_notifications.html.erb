<script>
  const style = document.createElement('style');
  style.textContent = `
    .notification {
        padding: 10px;
        margin: 10px;
        display: flex;
        flex-direction: row;
        align-items: center;
        column-gap: 10px;
      }
    .notification-warning {
        border-color: #ffab7f;
      }
    .notification-warning .progress-bar {
        background-color: #002f5f; 
      }
    .notification-info {
        border-color: #7fb2bb;
      }
    .notification-error {
        border-color: #b90729;
      }
    .notification-title {
        color: #595959;
        font-weight: 600;
        font-size: 16px;
      }
    .notification-title a {
        color: #595959;
        text-decoration: underline;
      }
    .notification-message {
        font-size: 16px;
      }
    .notification-content {
        width: 100%;
      }
    .notification-icon {
        padding: 10px;
      }
    .notification-info .notification-icon {
        color: #006779;
      }
    .notification-warning .notification-icon {
        color: #e6bf12;
      }
    .notification-error .notification-icon {
        color: #b90729;
      }
  `;
  document.head.appendChild(style);
</script>
<style>
div.scroll {
    overflow: auto;
    height: 330px;
    scroll-padding-top: 10%;
      border-radius: 6px;
  box-shadow: rgb(0 0 0 / 15%) 0px 10px 20px, rgb(0 0 0 / 20%) 0px 5px 5px;
  padding: 20px;
  margin-top: 20px;
  margin-bottom: 20px;

}
    .title-underline {
        width: 44px;
        height: 4px;
        background-color: #006778;
        margin-top: 10px;
      }


    .notification-title {                 
    display: block;           
    font-size: 16px;          
    color: #595959;           
    font-weight: 500;         
    margin-bottom: 10px;      
    }
</style>
<div class="scroll" id=csc_warnings>
    <div class="notification-title">
    Notifications
    <div class="motd-title-underline"></div>
    </div>
<%- CSCQuota.get.select{ |quota| quota.insufficient?(threshold: Configuration.quota_threshold ) }.sort_by(&:percent_total_usage).reverse.each do |quota| -%>
  <%= render :partial => 'widgets/quota_notification', :locals => {:quota => quota} %>
<%- end -%>
<% CSCBalance.get.select{ |balance| balance.insufficient?(threshold: Configuration.balance_threshold) }.sort_by(&:percent_usage).reverse.each do |balance| %>  
  <%= render :partial => 'widgets/balance_notification', :locals => {:balance => balance} %>
<% end %>
</div>
